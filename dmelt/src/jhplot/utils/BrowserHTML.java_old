package jhplot.utils;

import javax.swing.*;
import javax.swing.event.*;


import java.awt.*;
import java.awt.event.*;
import java.net.*;
import java.io.*;
import javax.swing.text.html.*;
import javax.swing.text.*;

/**
 * Simple Web browser" using Swing. Supply a URL on the command line.
 * @author S.Chekanov 
 * 
 */

public class BrowserHTML extends JFrame implements HyperlinkListener,
		ActionListener {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public static void main(String[] args) {
		if (args.length == 0)
			try {
				new BrowserHTML(new URL("http://jwork.org/scavis/api/doc.php/jhplot/package-summary"));
			} catch (MalformedURLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		else
			try {
				new BrowserHTML(new URL(args[0]));
			} catch (MalformedURLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

	private JButton homeButton;
	private JTextField urlField;
	private JEditorPane htmlPane;
	private String  sinitialURL;
        Font font = UIManager.getFont("Label.font");

	public BrowserHTML(URL initialURL) {
		super("Help Browser");
		// addWindowListener(new ExitListener());
		// WindowUtilities.setNativeLookAndFeel();

		this.sinitialURL=initialURL.toString();
		JPanel topPanel = new JPanel();
		topPanel.setBackground(Color.lightGray);
		homeButton = new JButton("Home");
		homeButton.addActionListener(this);
		JLabel urlLabel = new JLabel("URL:");
		urlField = new JTextField(30);
		urlField.setText(sinitialURL);
		urlField.addActionListener(this);
		topPanel.add(homeButton);
		topPanel.add(urlLabel);
		topPanel.add(urlField);
		getContentPane().add(topPanel, BorderLayout.NORTH);

		try {
			htmlPane = new JEditorPane(initialURL);
                        htmlPane.setContentType("text/html");

                        // add a HTMLEditorKit to the editor pane
                         HTMLEditorKit kit = new HTMLEditorKit();
                         htmlPane.setEditorKit(kit);
                         StyleSheet styleSheet = kit.getStyleSheet();
styleSheet.addRule("body {color:#000; font-family:times; margin: 4px; }");
styleSheet.addRule("h1 {color: blue;}");
styleSheet.addRule("h2 {color: #ff0000;}");
styleSheet.addRule("pre {font : 12px monaco; color : black; background-color : #fafafa; }");
                         Document doc = kit.createDefaultDocument();
                         htmlPane.setDocument(doc);
                         htmlPane.setPage(initialURL);

                        // string fontfamily = htmlPane.getFont().getFamily();
                        String bodyRule = "body { font-family: " + font.getFamily() + "; " +
                        "font-size: " + font.getSize() + "pt; }";
                        ((HTMLDocument)htmlPane.getDocument()).getStyleSheet().addRule(bodyRule);
                        // htmlPane.setText("<html><body style=\"font-family: " + fontfamily + "\"<b>This is some text!</b></html>");
			htmlPane.setEditable(false);
			htmlPane.addHyperlinkListener(this);
			JScrollPane scrollPane = new JScrollPane(htmlPane);
			getContentPane().add(scrollPane, BorderLayout.CENTER);
		} catch (IOException ioe) {
			warnUser("Can't build HTML pane for " + initialURL + ": " + ioe);
		}

		Dimension screenSize = getToolkit().getScreenSize();
		int width = screenSize.width * 4 / 10;
		int height = screenSize.height * 4 / 10;
		setBounds(width / 4, height / 4, width, height);
		setVisible(true);
	}

	public void actionPerformed(ActionEvent event) {
		String url;
		if (event.getSource() == urlField)
			url = urlField.getText();
		else
			// Clicked "home" button instead of entering URL
			url = sinitialURL;
		try {
			htmlPane.setPage(new URL(url));
                        String bodyRule = "body { font-family: " + font.getFamily() + "; " +
                        "font-size: " + font.getSize() + "pt; }";
                        ((HTMLDocument)htmlPane.getDocument()).getStyleSheet().addRule(bodyRule);


			urlField.setText(url);
		} catch (IOException ioe) {
			warnUser("Can't follow link to " + url + ": " + ioe);
		}
	}

	public void hyperlinkUpdate(HyperlinkEvent event) {
		if (event.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
			try {
				htmlPane.setPage(event.getURL());
                                 String bodyRule = "body { font-family: " + font.getFamily() + "; " +
                                "font-size: " + font.getSize() + "pt; }";
                                ((HTMLDocument)htmlPane.getDocument()).getStyleSheet().addRule(bodyRule);
				urlField.setText(event.getURL().toExternalForm());
			} catch (IOException ioe) {
				warnUser("Can't follow link to "
						+ event.getURL().toExternalForm() + ": " + ioe);
			}
		}
	}

	private void warnUser(String message) {
		JOptionPane.showMessageDialog(this, message, "Error",
				JOptionPane.ERROR_MESSAGE);
	}
}
