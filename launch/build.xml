<project name="launch" default="dist" basedir=".">
    <description>
        Launch build file
    </description>
  <!-- set global properties for this build -->

  <property file="abuild.properties"/>


  <!-- Make sure we're running a Java 5 or better. -->
  <condition property="java.8.available">
    <or>
      <contains string="${java.version}" substring="1.8" />
    </or>
  </condition>
  <fail message="This package requires Java 8." unless="java.8.available" />



  <!-- set global properties for this build -->
  <property name="src.dir" location="src" />
  <property name="src" location="src" />
  <property name="build" location="build" />
  <property name="dist"  location="dist" />
  <property name="lib.dir" value="lib"/>
  <property name="lib.sys" value="lib/system"/>
  <property name="lib.math" value="lib/math"/>
  <property name="lib.fin" value="lib/finance"/>
  <property name="lib.freehep" value="lib/freehep"/>
  <property name="lib.jehep" value="lib/dmelt"/>
  <property name="workDir" value="'pwd'"/> 
 
  <path id="classpath">
       <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

   <tstamp>
     <format property="time.stamp" pattern="yyyy-MM-dd_HH:mm:ss"/>
</tstamp>

 

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>
    
  <target name="copybeforecompile" depends="init">

    <!-- prepare library directory -->
    <mkdir dir="${dist}/lib"/>


 <!-- make necessary manifest -->
  <manifest file="${src.dir}/META-INF/MANIFEST.MF">
            <attribute name="Built-By" value="${app.author}"/>
            <attribute name="Main-Class" value="jhepsim.Main"/>
            <attribute name="Class-Path" value=""/>
            <attribute name="Built-Date" value="${time.stamp}"/>
            <attribute name="Version" value="${app.version}"/>
            <attribute name="Permissions" value="all-permissions"/>
            <attribute name="Codebase" value="atlaswww.hep.anl.gov"/>
            <attribute name="Application-Name" value="HepSim analyzer"/>
            <attribute name="Entry-Point" value="jhepsim.Main"/>
  </manifest>


    <!-- copy directory -->
    <copy todir="${build}">
      <fileset dir="${src}">
        <patternset>
          <exclude name="**/*.java" />
          <exclude name="**/*.odg" />
          <exclude name="**/*.odp" />
          <exclude name="**/*.*~" />
          <exclude name="**/*.bak" />
          <exclude name="**/*.class" />
          <exclude name="**/*_old" />
          <exclude name="**/*_defo" />
          <exclude name="**/*_v1" />
          <exclude name="**/*_v2" />
          <exclude name="**/*_v3" />
        </patternset>
      </fileset>
    </copy>
  </target>
  
  <target name="compile" depends="init,copybeforecompile"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"
          debug="on"  deprecation="off"  optimize="on" 
           target="${build.targetversion}" source="${build.sourceversion}" 
          classpathref="classpath">
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${lib.jehep}/launch.jar" 
         basedir="${build}" 
         index="true"
         manifest="${build}/META-INF/MANIFEST.MF"/>
  </target>






<target name="run" depends="dist">
   <!-- run the class -->
   <java classname="jhepsim.Main"
           fork="true"
           failonerror="true"
           maxmemory="1024m"
           >

          <arg value="macros/examples/histo1.py"/>

          <sysproperty key="jehep.home" 
             value="${basedir}"/>

         <classpath>
         <pathelement path="${java.class.path}"/>

        <fileset dir=".">
            <include name="${lib.jehep}/launch.jar"/>
        </fileset>

        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>

  </classpath>
       </java>

  </target>




   <!-- Delete the ${build} and ${dist} directory trees -->
  <target name="clean"
        description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete file="${lib.jehep}/fpad.jar"/>
  </target>





</project>
