package org.freehep.jas.plugin.basic;

import java.io.File;
import org.freehep.swing.JDirectoryChooser;

/**
 * A preferences panel used by the FileOpener
 * @author Tony Johnson
 */
class FileOpenPreferences extends javax.swing.JPanel
{
   /** Creates new form FileOpenPreferences */
   FileOpenPreferences(FileOpener opener)
   {
      this.fileOpener = opener;
      initComponents();
      setEnabled(null);
   }
   boolean apply()
   {
      fileOpener.setDefaultDirectory(directoryTextField.getText());
      fileOpener.setRestoreLastDirectoryUsed(rememberButton.isSelected());
      return true;
   }
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   private void initComponents()//GEN-BEGIN:initComponents
   {
      javax.swing.ButtonGroup buttonGroup;
      javax.swing.JRadioButton defaultButton;
      java.awt.GridBagConstraints gridBagConstraints;
      javax.swing.JLabel jLabel1;

      buttonGroup = new javax.swing.ButtonGroup();
      jLabel1 = new javax.swing.JLabel();
      rememberButton = new javax.swing.JRadioButton();
      defaultButton = new javax.swing.JRadioButton();
      directoryTextField = new javax.swing.JTextField();
      browseButton = new javax.swing.JButton();

      setLayout(new java.awt.GridBagLayout());

      setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
      jLabel1.setText("When opening files start file chooser in:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      add(jLabel1, gridBagConstraints);

      rememberButton.setText("Last directory used");
      rememberButton.setSelected(fileOpener.isRestoreLastDirectoryUsed());
      buttonGroup.add(rememberButton);
      rememberButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            setEnabled(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
      add(rememberButton, gridBagConstraints);

      defaultButton.setText("User specified directory");
      defaultButton.setSelected(!fileOpener.isRestoreLastDirectoryUsed());
      buttonGroup.add(defaultButton);
      defaultButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            setEnabled(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
      add(defaultButton, gridBagConstraints);

      directoryTextField.setColumns(20);
      directoryTextField.setText(fileOpener.getDefaultDirectory());
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
      gridBagConstraints.weightx = 1.0;
      add(directoryTextField, gridBagConstraints);

      browseButton.setText("Browse...");
      browseButton.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            browseButtonActionPerformed(evt);
         }
      });

      add(browseButton, new java.awt.GridBagConstraints());

   }//GEN-END:initComponents

   private void setEnabled(java.awt.event.ActionEvent evt)//GEN-FIRST:event_setEnabled
   {//GEN-HEADEREND:event_setEnabled
      boolean enabled = !rememberButton.isSelected();
      browseButton.setEnabled(enabled);
      directoryTextField.setEnabled(enabled);
   }//GEN-LAST:event_setEnabled

   private void browseButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_browseButtonActionPerformed
   {//GEN-HEADEREND:event_browseButtonActionPerformed
      JDirectoryChooser chooser = new JDirectoryChooser();
      try
      {
         chooser.setCurrentDirectory(new File(directoryTextField.getText()));
      }
      catch (Throwable t) { t.printStackTrace(); }
      int rc = chooser.showDialog(this);
      if (rc == JDirectoryChooser.APPROVE_OPTION)
      {
         directoryTextField.setText(chooser.getSelectedFile().getAbsolutePath());
      }
   }//GEN-LAST:event_browseButtonActionPerformed

   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton browseButton;
   private javax.swing.JTextField directoryTextField;
   private javax.swing.JRadioButton rememberButton;
   // End of variables declaration//GEN-END:variables

   private FileOpener fileOpener;      
}
