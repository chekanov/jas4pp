package org.freehep.jas.extension.tupleExplorer.jel;

import gnu.jel.CompilationException;
import org.freehep.jas.extension.tupleExplorer.mutableTuple.MutableTuple;
import org.freehep.jas.extension.tupleExplorer.mutableTuple.MutableTupleTree;

/**
 *
 * @author  tonyj
 */
public class JELCutPanel extends javax.swing.JPanel implements javax.swing.event.DocumentListener
{
   private JELCut cut;
   private MutableTuple tuple;
   private MutableTupleTree tupleTree;

   public JELCutPanel(JELCut cut, MutableTuple tuple, MutableTupleTree tupleTree)
   {
      this.cut = cut;
      this.tuple = tuple;
      this.tupleTree = tupleTree;
      initComponents();
      expression.getDocument().addDocumentListener(this);
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    private void initComponents() {//GEN-BEGIN:initComponents
        expression = new org.freehep.jas.extension.tupleExplorer.jel.ExpressionField(tuple, tupleTree);
        apply = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        expression.setColumns(20);
        expression.setText(cut.getExpression());
        expression.setToolTipText("Boolean Expression");
        expression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                expressionActionPerformed(evt);
            }
        });

        add(expression, java.awt.BorderLayout.CENTER);

        apply.setText("Apply");
        apply.setEnabled(false);
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        add(apply, java.awt.BorderLayout.EAST);

    }//GEN-END:initComponents

   private void expressionActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_expressionActionPerformed
   {//GEN-HEADEREND:event_expressionActionPerformed
      if (apply.isEnabled()) apply.doClick();
   }//GEN-LAST:event_expressionActionPerformed

   private void applyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_applyActionPerformed
   {//GEN-HEADEREND:event_applyActionPerformed
      try
      {
         apply.setEnabled(false);
         NTupleCompiledExpression ce = expression.compile(Boolean.TYPE);
         cut.setExpression(ce,expression.getText());
      }
      catch (CompilationException x)
      {
         javax.swing.JOptionPane.showMessageDialog(this,x.getMessage(),"Compilation Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      }
   }//GEN-LAST:event_applyActionPerformed
   private void doEnable()
   {
      apply.setEnabled(expression.getText() != cut.getExpression());
   }
   public void removeUpdate(javax.swing.event.DocumentEvent documentEvent)
   {
      doEnable();
   }
   public void insertUpdate(javax.swing.event.DocumentEvent documentEvent)
   {
      doEnable();
   }
   public void changedUpdate(javax.swing.event.DocumentEvent documentEvent)
   {
      doEnable();
   }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.freehep.jas.extension.tupleExplorer.jel.ExpressionField expression;
    private javax.swing.JButton apply;
    // End of variables declaration//GEN-END:variables

}
