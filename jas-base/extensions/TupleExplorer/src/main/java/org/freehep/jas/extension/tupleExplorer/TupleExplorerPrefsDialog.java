package org.freehep.jas.extension.tupleExplorer;

import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author The FreeHEP team @ SLAC.
 *
 */
class TupleExplorerPrefsDialog extends javax.swing.JPanel {
    
    /** Creates new form PrefsDialog */
    public TupleExplorerPrefsDialog(TupleExplorerPlugin plugin) {
        initComponents();
        tupleSize.setText( plugin.getLoadTupleMemorySize() );
        tupleSizeOldValue = tupleSize.getText();
        autoLoadCheckBox.setSelected( plugin.getAutoLoadTuple() );
        setTextSelected(autoLoadCheckBox.isSelected());
        doubleClickList.setSelectedIndex( plugin.getDoubleClick() );
    }
    
    void apply(TupleExplorerPlugin plugin) {
        plugin.setLoadTupleMemorySize( tupleSize.getText() );
        plugin.setAutoLoadTuple( autoLoadCheckBox.isSelected() );
        plugin.setDoubleClick( doubleClickList.getSelectedIndex() );
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        inMemoryTuplePanel = new javax.swing.JPanel();
        memoryLimitText = new javax.swing.JLabel();
        memoryUnits = new javax.swing.JLabel();
        autoLoadCheckBox = new javax.swing.JCheckBox();
        tupleSize = new javax.swing.JTextField();
        doubleClickPanel = new javax.swing.JPanel();
        douleClickText = new javax.swing.JLabel();
        doubleClickList = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
        inMemoryTuplePanel.setLayout(new java.awt.GridBagLayout());

        memoryLimitText.setText("memory limit: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        inMemoryTuplePanel.add(memoryLimitText, gridBagConstraints);

        memoryUnits.setText(" Mb");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        inMemoryTuplePanel.add(memoryUnits, gridBagConstraints);

        autoLoadCheckBox.setSelected(true);
        autoLoadCheckBox.setText("Auto-Load in memory : ");
        autoLoadCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoLoadCheckBoxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        inMemoryTuplePanel.add(autoLoadCheckBox, gridBagConstraints);

        tupleSize.setEditable(false);
        tupleSize.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tupleSize.setText("3.0");
        tupleSize.setPreferredSize(new java.awt.Dimension(41, 20));
        tupleSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tupleSizeActionPerformed(evt);
            }
        });

        tupleSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tupleSizeFocusLost(evt);
            }
        });

        tupleSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tupleSizeMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        inMemoryTuplePanel.add(tupleSize, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(inMemoryTuplePanel, gridBagConstraints);

        doubleClickPanel.setLayout(new java.awt.GridBagLayout());

        douleClickText.setText("When double-clicking : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        doubleClickPanel.add(douleClickText, gridBagConstraints);

        doubleClickList.setMaximumRowCount(4);
        doubleClickList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plot in current region", "Plot in new region", "Plot in new page", "Overlay plot" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        doubleClickPanel.add(doubleClickList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(doubleClickPanel, gridBagConstraints);

    }//GEN-END:initComponents

    private void tupleSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tupleSizeFocusLost
        tupleSize.setText(tupleSizeOldValue);
        tupleSize.setEditable(false);
    }//GEN-LAST:event_tupleSizeFocusLost
        
    private void tupleSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tupleSizeMouseClicked
        if ( autoLoadCheckBox.isSelected() ) {
            tupleSize.setEditable(true);
            tupleSize.selectAll();
        }
    }//GEN-LAST:event_tupleSizeMouseClicked
    
    private void autoLoadCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoLoadCheckBoxActionPerformed
        setTextSelected( autoLoadCheckBox.isSelected() );
    }//GEN-LAST:event_autoLoadCheckBoxActionPerformed
    
    private void tupleSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tupleSizeActionPerformed
        try {
            Double d = new Double( tupleSize.getText() );
            if ( d.doubleValue() <= 0. )
                throw new NumberFormatException();
            tupleSizeOldValue = tupleSize.getText();
            tupleSize.setEditable(false);
        } catch ( NumberFormatException nfe ) {
            JOptionPane.showMessageDialog(this,"Invalide value "+tupleSize.getText()+"; it has to be a positive number","Error",JOptionPane.ERROR_MESSAGE);
            tupleSize.setText(tupleSizeOldValue);
            tupleSize.selectAll();
            inMemoryTuplePanel.grabFocus();
        }
    }//GEN-LAST:event_tupleSizeActionPerformed
    
    private void setTextSelected( boolean selected ) {
        tupleSize.setEnabled(selected);
        memoryUnits.setEnabled(selected);
        memoryLimitText.setEnabled(selected);
    }
    
    private String tupleSizeOldValue;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField tupleSize;
    private javax.swing.JLabel memoryLimitText;
    private javax.swing.JComboBox doubleClickList;
    private javax.swing.JCheckBox autoLoadCheckBox;
    private javax.swing.JPanel inMemoryTuplePanel;
    private javax.swing.JLabel memoryUnits;
    private javax.swing.JPanel doubleClickPanel;
    private javax.swing.JLabel douleClickText;
    // End of variables declaration//GEN-END:variables
    
}
