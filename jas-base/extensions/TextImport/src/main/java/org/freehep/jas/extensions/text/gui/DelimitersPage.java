package org.freehep.jas.extensions.text.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.util.regex.PatternSyntaxException;
import org.freehep.application.Application;
import org.freehep.jas.extensions.text.core.LineSource;
import org.freehep.jas.extensions.text.core.TextMetaData;
import org.freehep.swing.wizard.HasNextPages;
import org.freehep.swing.wizard.WizardPage;


/**
 *
 * @author Tony Johnson
 */
class DelimitersPage extends WizardPage implements PropertyChangeListener, HasNextPages
{
   /** Creates new form DelimitersPanel */
   DelimitersPage()
   {
      initComponents();
      previewTable.getTableHeader().setReorderingAllowed(false);
   }
   void setData(GUIUtilities util)
   {
      this.util = util;
      previewTable.setModel(new PreviewModel(util));
      
      if (delimiterManager1 != null) delimiterManager1.removePropertyChangeListener(this);
      delimiterManager1 = util.getMetaData().getDelimiterManager();
      if (delimiterManager1 != null) delimiterManager1.addPropertyChangeListener(this);
      
      jCheckBox1.setSelected(delimiterManager1.isTab());
      jCheckBox2.setSelected(delimiterManager1.isSemicolon());
      jCheckBox3.setSelected(delimiterManager1.isComma());
      jCheckBox4.setSelected(delimiterManager1.isSpace());
      jCheckBox5.setSelected(delimiterManager1.isOther());
      jTextField1.setText(delimiterManager1.getOtherString());
      jTextField1.setEnabled(delimiterManager1.isOther());
      jButton2.setEnabled(delimiterManager1.isOther());
      jCheckBox6.setSelected(delimiterManager1.isTreatConsecutiveAsOne());
      jComboBox1.setSelectedIndex(delimiterManager1.getTextQualifier());
      jTextField2.setText(delimiterManager1.getRegularExpression());
      jTabbedPane1.setSelectedIndex(delimiterManager1.isRegularExpressionSet() ? 1 : 0);
   }
   
   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   private void initComponents()//GEN-BEGIN:initComponents
   {
      java.awt.GridBagConstraints gridBagConstraints;

      delimiterManager1 = null;
      jLabel1 = new javax.swing.JLabel();
      jTabbedPane1 = new javax.swing.JTabbedPane();
      jPanel1 = new javax.swing.JPanel();
      jPanel2 = new javax.swing.JPanel();
      jCheckBox1 = new javax.swing.JCheckBox();
      jCheckBox2 = new javax.swing.JCheckBox();
      jCheckBox3 = new javax.swing.JCheckBox();
      jCheckBox4 = new javax.swing.JCheckBox();
      jPanel3 = new javax.swing.JPanel();
      jCheckBox5 = new javax.swing.JCheckBox();
      jTextField1 = new javax.swing.JTextField();
      jButton2 = new javax.swing.JButton();
      jPanel4 = new javax.swing.JPanel();
      jCheckBox6 = new javax.swing.JCheckBox();
      jLabel2 = new javax.swing.JLabel();
      jComboBox1 = new javax.swing.JComboBox();
      jPanel6 = new javax.swing.JPanel();
      jLabel3 = new javax.swing.JLabel();
      jTextField2 = new javax.swing.JTextField();
      jButton1 = new javax.swing.JButton();
      jPanel5 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      previewTable = new PreviewTable();

      setLayout(new java.awt.GridBagLayout());

      setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
      jLabel1.setText("Set the delimiters for your data, and view the results in the preview below.");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      add(jLabel1, gridBagConstraints);

      jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener()
      {
         public void stateChanged(javax.swing.event.ChangeEvent evt)
         {
            tabChanged(evt);
         }
      });

      jPanel1.setLayout(new java.awt.GridBagLayout());

      jPanel1.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
      jPanel1.setName("");
      jPanel2.setLayout(new java.awt.GridBagLayout());

      jPanel2.setBorder(new javax.swing.border.TitledBorder("Delimiters"));
      jCheckBox1.setMnemonic('T');
      jCheckBox1.setLabel("Tab");
      jCheckBox1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox1ActionPerformed1(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel2.add(jCheckBox1, gridBagConstraints);

      jCheckBox2.setMnemonic('m');
      jCheckBox2.setLabel("Semicolon");
      jCheckBox2.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox2ActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel2.add(jCheckBox2, gridBagConstraints);

      jCheckBox3.setMnemonic('C');
      jCheckBox3.setLabel("Comma");
      jCheckBox3.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox3ActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel2.add(jCheckBox3, gridBagConstraints);

      jCheckBox4.setMnemonic('S');
      jCheckBox4.setLabel("Space");
      jCheckBox4.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox4ActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel2.add(jCheckBox4, gridBagConstraints);

      jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

      jCheckBox5.setMnemonic('O');
      jCheckBox5.setText("Other:");
      jCheckBox5.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox5ActionPerformed(evt);
            jCheckBox5ActionPerformed1(evt);
         }
      });

      jPanel3.add(jCheckBox5);

      jTextField1.setColumns(4);
      jTextField1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jTextField1ActionPerformed(evt);
         }
      });

      jPanel3.add(jTextField1);

      jButton2.setText("Apply");
      jButton2.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButton2ActionPerformed(evt);
         }
      });

      jPanel3.add(jButton2);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel2.add(jPanel3, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
      jPanel1.add(jPanel2, gridBagConstraints);

      jPanel4.setLayout(new java.awt.GridBagLayout());

      jCheckBox6.setMnemonic('r');
      jCheckBox6.setText("Treat consecutive delimiters as one");
      jCheckBox6.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jCheckBox6ActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel4.add(jCheckBox6, gridBagConstraints);

      jLabel2.setDisplayedMnemonic('q');
      jLabel2.setLabelFor(jComboBox1);
      jLabel2.setText("Text qualifier:");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
      jPanel4.add(jLabel2, gridBagConstraints);

      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "\"", "'", "None" }));
      jComboBox1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jComboBox1ActionPerformed1(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
      jPanel4.add(jComboBox1, gridBagConstraints);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel1.add(jPanel4, gridBagConstraints);

      jTabbedPane1.addTab("Simple", jPanel1);

      jPanel6.setLayout(new java.awt.GridBagLayout());

      jPanel6.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
      jLabel3.setLabelFor(jTextField2);
      jLabel3.setText("<html>Specify a regular expression to be used for splitting each line into columns.<br>\nThe expression will be applied repeatedly to each line, and on each invocation<br>\nshould extract the next column.");
      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      jPanel6.add(jLabel3, gridBagConstraints);

      jTextField2.setColumns(30);
      jTextField2.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jTextField2ActionPerformed1(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      gridBagConstraints.weightx = 1.0;
      jPanel6.add(jTextField2, gridBagConstraints);

      jButton1.setText("Apply");
      jButton1.addActionListener(new java.awt.event.ActionListener()
      {
         public void actionPerformed(java.awt.event.ActionEvent evt)
         {
            jButton1ActionPerformed(evt);
         }
      });

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      jPanel6.add(jButton1, gridBagConstraints);

      jTabbedPane1.addTab("Advanced", jPanel6);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
      add(jTabbedPane1, gridBagConstraints);

      jPanel5.setLayout(new java.awt.BorderLayout());

      jPanel5.setBorder(new javax.swing.border.TitledBorder("Data preview"));
      jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 150));
      jScrollPane1.setViewportView(previewTable);

      jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

      gridBagConstraints = new java.awt.GridBagConstraints();
      gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
      gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
      gridBagConstraints.weightx = 1.0;
      gridBagConstraints.weighty = 1.0;
      add(jPanel5, gridBagConstraints);

   }//GEN-END:initComponents

   private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
   {//GEN-HEADEREND:event_jButton2ActionPerformed
      delimiterManager1.setOtherString(jTextField1.getText());
   }//GEN-LAST:event_jButton2ActionPerformed
   
   private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
   {//GEN-HEADEREND:event_jButton1ActionPerformed
      String regex = jTextField2.getText();
      try
      {
         delimiterManager1.setRegularExpression(regex);
      }
      catch (PatternSyntaxException x)
      {
         jTextField2.setCaretPosition(x.getIndex());
         Application.error(this,"Illegal regular expression",x);
      }
   }//GEN-LAST:event_jButton1ActionPerformed
   
   private void jTextField2ActionPerformed1(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField2ActionPerformed1
   {//GEN-HEADEREND:event_jTextField2ActionPerformed1
      jButton1.doClick();
   }//GEN-LAST:event_jTextField2ActionPerformed1
   
   private void tabChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_tabChanged
   {//GEN-HEADEREND:event_tabChanged
      if (delimiterManager1 != null) delimiterManager1.setRegularExpressionSet(jTabbedPane1.getSelectedIndex()>0);
   }//GEN-LAST:event_tabChanged
   
   private void expressionChanged(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_expressionChanged
   {//GEN-HEADEREND:event_expressionChanged
      
   }//GEN-LAST:event_expressionChanged
   
   private void jComboBox1ActionPerformed1(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBox1ActionPerformed1
   {//GEN-HEADEREND:event_jComboBox1ActionPerformed1
      delimiterManager1.setTextQualifier(jComboBox1.getSelectedIndex());
   }//GEN-LAST:event_jComboBox1ActionPerformed1
   
   private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox6ActionPerformed
   {//GEN-HEADEREND:event_jCheckBox6ActionPerformed
      delimiterManager1.setTreatConsecutiveAsOne(jCheckBox6.isSelected());
   }//GEN-LAST:event_jCheckBox6ActionPerformed
   
   private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField1ActionPerformed
   {//GEN-HEADEREND:event_jTextField1ActionPerformed
      jButton2.doClick();
   }//GEN-LAST:event_jTextField1ActionPerformed
   
   private void jCheckBox5ActionPerformed1(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox5ActionPerformed1
   {//GEN-HEADEREND:event_jCheckBox5ActionPerformed1
      jTextField1.setEnabled(jCheckBox5.isSelected());
      jButton2.setEnabled(jCheckBox5.isSelected());
   }//GEN-LAST:event_jCheckBox5ActionPerformed1
   
   private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox5ActionPerformed
   {//GEN-HEADEREND:event_jCheckBox5ActionPerformed
      delimiterManager1.setOther(jCheckBox5.isSelected());
   }//GEN-LAST:event_jCheckBox5ActionPerformed
   
   private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox4ActionPerformed
   {//GEN-HEADEREND:event_jCheckBox4ActionPerformed
      delimiterManager1.setSpace(jCheckBox4.isSelected());
   }//GEN-LAST:event_jCheckBox4ActionPerformed
   
   private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox3ActionPerformed
   {//GEN-HEADEREND:event_jCheckBox3ActionPerformed
      delimiterManager1.setComma(jCheckBox3.isSelected());
   }//GEN-LAST:event_jCheckBox3ActionPerformed
   
   private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox2ActionPerformed
   {//GEN-HEADEREND:event_jCheckBox2ActionPerformed
      delimiterManager1.setSemicolon(jCheckBox2.isSelected());
   }//GEN-LAST:event_jCheckBox2ActionPerformed
   
   private void jCheckBox1ActionPerformed1(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBox1ActionPerformed1
   {//GEN-HEADEREND:event_jCheckBox1ActionPerformed1
      delimiterManager1.setTab(jCheckBox1.isSelected());
   }//GEN-LAST:event_jCheckBox1ActionPerformed1
   public void propertyChange(PropertyChangeEvent evt)
   {
      jTextField2.setText(delimiterManager1.getRegularExpression());
   }
   
   public WizardPage getNext()
   {
      next.setData(util);
      return next;
   }
   
   public WizardPage[] getNextWizardPages()
   {
      return new WizardPage[]
      {next};
   }
   
   
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private org.freehep.jas.extensions.text.core.DelimiterManager delimiterManager1;
   private javax.swing.JButton jButton1;
   private javax.swing.JButton jButton2;
   private javax.swing.JCheckBox jCheckBox1;
   private javax.swing.JCheckBox jCheckBox2;
   private javax.swing.JCheckBox jCheckBox3;
   private javax.swing.JCheckBox jCheckBox4;
   private javax.swing.JCheckBox jCheckBox5;
   private javax.swing.JCheckBox jCheckBox6;
   private javax.swing.JComboBox jComboBox1;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JPanel jPanel5;
   private javax.swing.JPanel jPanel6;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTabbedPane jTabbedPane1;
   private javax.swing.JTextField jTextField1;
   private javax.swing.JTextField jTextField2;
   private javax.swing.JTable previewTable;
   // End of variables declaration//GEN-END:variables
   private TypePage next = new TypePage();
   private GUIUtilities util;
}